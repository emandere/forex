//Start Mongo local test
mongod --dbpath c:\data

//Using Mongo Container
//Get latest mongo container
docker pull mongo:latest
//Run mongo container
docker run -v "$(pwd)":/data --name mongo -d mongo mongod --smallfiles
//Query mongo database
docker exec -it mongo bash

sudo /etc/init.d/jenkins restart

# Delete every Docker containers
# Must be run first because images are attached to containers
docker rm $(docker ps -a -q)

# Delete every Docker image
docker rmi $(docker images -q)

//Get running containers
sudo docker ps

//Stop docker Process
sudo docker stop [id]

//Build forex docker container
sudo docker build -t forexapp github.com/emandere/forex

sudo docker build -t quoteapp -f DockerfileQuoteLogger github.com/emandere/forex

sudo docker build -t candleapp -f DockerfileQuoteCandles github.com/emandere/forex

//Run forex docker container
sudo docker run -p 80:80 --link mongo:mongo forexapp -t

sudo docker run -p 80:80 --link mongo:mongo quoteapp -t

sudo docker run -v /home/ubuntu/tradedata/keys:/forex/keys --link mongo:mongo -t quoteapp

sudo docker run -d -t -i --name candleapp --restart=always --link mongo:mongo candleapp

//Start EC2 Instance

aws ec2 run-instances --image-id ami-abe2aabc --security-group-ids sg-b46484c8 --subnet-id subnet-c771eeb0 --count 1 --instance-type c4.8xlarge --key-name devenv-key --query 'Instances[0].InstanceId'

//Script to reset aws

!#/bin/bash
sudo docker kill $(sudo docker ps -q)
sudo docker rm $(sudo docker ps -a -q)
sudo docker rmi $(sudo docker images -q)
sudo docker pull mongo:latest
sudo docker run -v "$(pwd)":/data --name mongo -d mongo mongod --smallfiles
sudo docker build -t forexapp github.com/emandere/forex
sudo docker run -p 80:80 --link mongo:mongo forexapp -t

pub run test UnitTests.dart


//local docker
docker run -p 27017:27017 -v /mnt/c/datamongodocker:/data/db --restart=always --name mongo -d mongo mongod --dbpath /data/db --smallfiles


sudo docker stats $(sudo docker ps --format '{{.Names}}')